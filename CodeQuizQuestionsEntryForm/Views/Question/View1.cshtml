@model CodeQuizQuestionsEntryForm.Models.Question

@{
    ViewBag.Title = "View1";
}

<h2>View1</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend>Question</legend>

        <div class="control-group">
            @Html.LabelFor(model => model.OwnerUserId, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.OwnerUserId)
				@Html.ValidationMessageFor(model => model.OwnerUserId, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.Body, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Body)
				@Html.ValidationMessageFor(model => model.Body, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.Option1, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Option1)
				@Html.ValidationMessageFor(model => model.Option1, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.Option2, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Option2)
				@Html.ValidationMessageFor(model => model.Option2, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.Option3, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Option3)
				@Html.ValidationMessageFor(model => model.Option3, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.Option4, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Option4)
				@Html.ValidationMessageFor(model => model.Option4, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.Option5, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Option5)
				@Html.ValidationMessageFor(model => model.Option5, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.Option6, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Option6)
				@Html.ValidationMessageFor(model => model.Option6, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.IndexOfCorrectOption, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.IndexOfCorrectOption)
				@Html.ValidationMessageFor(model => model.IndexOfCorrectOption, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.Comment, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Comment)
				@Html.ValidationMessageFor(model => model.Comment, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.CreateAt, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.CreateAt)
				@Html.ValidationMessageFor(model => model.CreateAt, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="form-actions no-color">
            <input type="submit" value="Create" class="btn" />
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

