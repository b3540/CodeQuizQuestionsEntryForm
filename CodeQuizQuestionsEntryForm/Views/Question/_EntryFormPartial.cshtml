@model CodeQuizQuestionsEntryForm.Models.Question

<fieldset class="form-horizontal">
    <div class="control-group">
        @Html.LabelFor(model => model.Body, new { @class = "control-label" })
        <div class="controls">
            @Html.TextAreaFor(model => model.Body, rows: 8, columns: 20, htmlAttributes: new { @class = "input-blockx span8" })
            @Html.ValidationMessageFor(model => model.Body, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Option1, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.Option1)
            @Html.ValidationMessageFor(model => model.Option1, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Option2, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.Option2)
            @Html.ValidationMessageFor(model => model.Option2, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Option3, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.Option3)
            @Html.ValidationMessageFor(model => model.Option3, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Option4, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.Option4)
            @Html.ValidationMessageFor(model => model.Option4, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Option5, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.Option5)
            @Html.ValidationMessageFor(model => model.Option5, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Option6, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.Option6)
            @Html.ValidationMessageFor(model => model.Option6, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.IndexOfCorrectOption, new { @class = "control-label" })
        <div class="controls">
            @Html.DropDownListFor(model => model.IndexOfCorrectOption, Enumerable.Range(1, 6).Select(n => new SelectListItem { Text = n.ToString() }))
            @Html.ValidationMessageFor(model => model.IndexOfCorrectOption, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Comment, new { @class = "control-label" })
        <div class="controls">
            @Html.TextAreaFor(model => model.Comment, rows: 8, columns: 20, htmlAttributes: new {@class = "span8" })
            @Html.ValidationMessageFor(model => model.Comment, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="form-actions no-color">
        <input type="submit" value="OK" class="btn btn-primary" />
        <a href="@Url.Action("Index")" class="btn">ƒLƒƒƒ“ƒZƒ‹</a>
    </div>
</fieldset>



